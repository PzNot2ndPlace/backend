name: Release

on:
  workflow_dispatch:
    inputs:
      app_version:
        description: 'Tag version for the release'
        required: true

env:
  APP_VERSION: ${{ github.event.inputs.app_version }}

jobs:

  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Prepare docker
        uses: ./.github/actions/prepare-docker
        with:
          password: ${{ secrets.DOCKER_PASSWORD }}
          username: ${{ secrets.DOCKER_USER }}

      - name: Build Docker images
        env:
          CI_REGISTRY_IMAGE: ${{ secrets.CI_REGISTRY_IMAGE }}
        run: docker-compose build notes-app

      - name: List images
        run: docker images

      - name: Tag Docker images
        run: |
          docker tag ${{ secrets.CI_REGISTRY_IMAGE }}/notes-app:$APP_VERSION ${{ secrets.CI_REGISTRY_IMAGE }}/notes-app:latest

      - name: Push Docker images
        run: |
          docker push -a ${{ secrets.CI_REGISTRY_IMAGE }}/notes-app

      - name: Display build completion date
        run: echo "Build completed on $(date)"

  release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.APP_VERSION }}
          release_name: Release ${{ env.APP_VERSION }}
          body: "New release of the application"
          draft: false
          prerelease: false

  deploy:
    runs-on: self-hosted
    needs: release
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Stop and remove old container
        run: |
          docker stop notes-app || true
          docker rm notes-app || true

      - name: Deploy new container
        env:
          SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.POSTGRES_USER }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          JWT_SIGNING_KEY: ${{ secrets.JWT_SIGNING_KEY }}
        run: |
          docker run -d \
            --name notes-app \
            --network my-network \
            -p 8080:8080 \
            -e APP_VERSION=${{ env.APP_VERSION }} \
            -e SPRING_DATASOURCE_URL="$SPRING_DATASOURCE_URL" \
            -e SPRING_DATASOURCE_USERNAME="$SPRING_DATASOURCE_USERNAME" \
            -e SPRING_DATASOURCE_PASSWORD="$SPRING_DATASOURCE_PASSWORD" \
            -e JWT_SIGNING_KEY="$JWT_SIGNING_KEY" \
            brawleryura1/notes-app:latest
